{"version":3,"file":"static/js/152.5cd9ed4f.chunk.js","mappings":"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","sources":["components/Home/HomePage/messages.ts","components/Home/HomePage/index.tsx","common/formatedMediaType.ts","components/Unknown/MovieListItem/index.tsx","components/Unknown/Pagination/index.tsx","components/Unknown/MovieList/index.tsx"],"sourcesContent":["import { defineMessages } from \"react-intl\";\r\n\r\nexport default defineMessages({\r\n  title: {\r\n    id: \"Home.HomePage.title\",\r\n    defaultMessage: \"In trends\",\r\n  },\r\n  subtitle: {\r\n    id: \"Home.HomePage.subtitle\",\r\n    defaultMessage: \"Best movies on this week\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { useIntl } from \"react-intl\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport MoviesList from \"../../Unknown/MovieList\";\r\nimport Loader from \"../../Unknown/Loader\";\r\n\r\nimport { useGetTrendsQuery } from \"../../../services/movieService\";\r\nimport messages from \"./messages\";\r\n\r\nconst HomePage: React.FC = () => {\r\n  const intl = useIntl();\r\n\r\n  const { data: trendsMoviesData, isLoading } = useGetTrendsQuery({\r\n    type: \"all\",\r\n  });\r\n\r\n  return (\r\n    <Box pt={18} pb={5} height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <Typography variant=\"h4\">{intl.formatMessage(messages.title)}</Typography>\r\n      <Typography mb={6}>{intl.formatMessage(messages.subtitle)}</Typography>\r\n\r\n      {isLoading && <Loader />}\r\n\r\n      {trendsMoviesData?.results && (\r\n        <MoviesList movies={trendsMoviesData.results} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\nexport default HomePage;\r\n","const formatedMediaType = (mediaType: string) => {\r\n  if (mediaType === \"tv\") return \"Series\";\r\n  if (mediaType === \"movie\") return \"Film\";\r\n  return \"Film\";\r\n};\r\n\r\nexport default formatedMediaType;\r\n","import React from \"react\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardActionArea from \"@mui/material/CardActionArea\";\r\nimport Chip from \"@mui/material/Chip\";\r\n\r\nimport formatedPosterImage from \"../../../common/formatedPosterImage\";\r\nimport formatedMediaType from \"../../../common/formatedMediaType\";\r\nimport formatedReleaseDate from \"../../../common/formatedReleaseDate\";\r\nimport { Movie } from \"../../../types\";\r\n\r\ninterface MoviesListItemProps {\r\n  movie: Movie;\r\n}\r\n\r\nconst MoviesListItem: React.FC<MoviesListItemProps> = ({ movie }) => {\r\n  const location = useLocation();\r\n  const type = formatedMediaType(movie.media_type);\r\n  const releaseDate = formatedReleaseDate(movie);\r\n  const rating = movie.vote_average ? movie.vote_average.toFixed(1) : null;\r\n  const linkToDetails =\r\n    movie.media_type === \"tv\" ? `/series/${movie.id}` : `/films/${movie.id}`;\r\n\r\n  return (\r\n    <Box\r\n      position=\"relative\"\r\n      component={RouterLink}\r\n      to={linkToDetails}\r\n      state={{\r\n        from: location.pathname,\r\n      }}\r\n      sx={{ textDecoration: \"none\" }}\r\n    >\r\n      <Card elevation={0}>\r\n        {rating && (\r\n          <Box position=\"absolute\" top={10} left={10} zIndex={1}>\r\n            <Chip label={rating} color=\"primary\" />\r\n          </Box>\r\n        )}\r\n\r\n        <CardActionArea>\r\n          <CardMedia\r\n            component=\"img\"\r\n            image={formatedPosterImage(movie.poster_path)}\r\n            alt={movie.title ?? movie.name}\r\n          />\r\n\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h6\">\r\n              {movie.title ?? movie.name}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {releaseDate ? `${releaseDate},` : null} {type}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MoviesListItem;\r\n","import React from \"react\";\r\nimport PaginationBase, { PaginationProps } from \"@mui/material/Pagination\";\r\n\r\nconst Pagination: React.FC<PaginationProps> = (props) => {\r\n  return <PaginationBase {...props} color=\"primary\" />;\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport MoviesListItem from \"../MovieListItem\";\r\nimport Pagination from \"../Pagination\";\r\n\r\nimport { Movie } from \"../../../types\";\r\n\r\ninterface MoviesListProps {\r\n  movies: Movie[];\r\n  withPagination?: boolean;\r\n  totalPages?: number;\r\n  changePage?: (page: number) => void;\r\n}\r\n\r\nconst MoviesList: React.FC<MoviesListProps> = ({\r\n  movies,\r\n  withPagination = false,\r\n  totalPages,\r\n  changePage,\r\n}) => {\r\n  const showPagination =\r\n    withPagination && !!totalPages && totalPages !== 0 && !!changePage;\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container spacing={6} columns={{ xs: 4, md: 6, lg: 8, xl: 10 }}>\r\n        {movies.map((movie) => (\r\n          <Grid key={movie.id} item xs={2}>\r\n            <MoviesListItem movie={movie} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {showPagination && (\r\n        <Box display=\"flex\" justifyContent=\"center\" mt={5}>\r\n          <Pagination\r\n            count={totalPages}\r\n            onChange={(_, page) => changePage(page)}\r\n          />\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n"],"names":["defineMessages","title","id","defaultMessage","subtitle","intl","useIntl","useGetTrendsQuery","type","trendsMoviesData","data","isLoading","Box","pt","pb","height","display","flexDirection","Typography","variant","formatMessage","messages","mb","Loader","results","movies","mediaType","movie","location","useLocation","formatedMediaType","media_type","releaseDate","formatedReleaseDate","rating","vote_average","toFixed","linkToDetails","position","component","RouterLink","to","state","from","pathname","sx","textDecoration","Card","elevation","top","left","zIndex","Chip","label","color","CardActionArea","CardMedia","image","formatedPosterImage","poster_path","alt","name","CardContent","gutterBottom","props","withPagination","totalPages","changePage","showPagination","Grid","container","spacing","columns","xs","md","lg","xl","map","item","justifyContent","mt","count","onChange","_","page"],"sourceRoot":""}